1, Get get_correlations_emission.py: 
python get_correlations_emission.py <input fine name: path of the file of emission matrix produced by Jason's training of ChromHMM> <output file name>
This file will calculate the correlations between marks based on the emission matrix produced by Jason's training of ChromHMM

2, Get_correlation_between_marks.py:
python get_correlation_between_marks.py <input folder: folder where the binary data is stored> <file where each line is a name of the samples (chromosome) that we want to calculate the correlations between marks on> <output folder. 2 files will be created, one is the correlations between marks, and the other is mark>

3, greedy_selection_facility_location_SSA.py:
python greedy_selection_facility_location_SSA.py --sim <path to the correlation file> 
--names <path to mark names file>
--output <path to output of kai>
Inside job_jobs
python ../kai_et_al_2016/greedy_selection_facility_location_SSA.py --sim ../../chrom_mark_selection_project/kai_etal_output/emission/correlations_emission.csv --names ../../chrom_mark_selection_project/kai_etal_output/emission/mark_names.txt --output ../../chrom_mark_selection_project/kai_etal_output/emission/kai_output.txt

4, get_mark_combination_representation_chromHMM.py:
python get_mark_combination_representation_chromHMM.py <input file, which is the output of kai et all. All mark indices are of the 0 index system> <output file where the makr combinations are stored> <number of marks to take. I ususally put 80>

Ex: python get_mark_combination_representation_chromHMM.py ../../chrom_mark_selection_project/kai_etal_output/binary/kai_output.txt ../../chrom_mark_selection_project/kai_etal_output/binary/increasing_mark_rep4EvalSubset.txt 80

python get_mark_combination_representation_chromHMM.py ../../chrom_mark_selection_project/kai_etal_output/binary_40fold_decrease/kai_output_binary_40FDecrease.txt ../../chrom_mark_selection_project/kai_etal_output/binary_40fold_decrease/increasing_mark_rep4EvalSubset.txt 80

5, get_mark_names_from_kai_output.py:
This will create a new file with the names of marks that are ranked and chosen by Kai et al
python get_mark_names_from_kai_output.py <rank kai file name> <mark name file: names of marks as ordered by the binary file and also consistent with the mark indices> <output file name> <number of marks to take. Usually 80>

Example: python get_mark_names_from_kai_output.py ../../chrom_mark_selection_project/kai_etal_output/emission/kai_output.txt ../../chrom_mark_selection_project/all_mark_names.txt ../../chrom_mark_selection_project/kai_etal_output/emission/mark_names_top80.txt 80

python get_mark_names_from_kai_output.py ../../chrom_mark_selection_project/kai_etal_output/binary/kai_output.txt ../../chrom_mark_selection_project/all_mark_names.txt ../../chrom_mark_selection_project/kai_etal_output/binary/mark_names_top80.txt 80

python get_mark_names_from_kai_output.py ../../chrom_mark_selection_project/kai_etal_output/binary_40fold_decrease/kai_output_binary_40FDecrease.txt ../../chrom_mark_selection_project/all_mark_names.txt ../../chrom_mark_selection_project/kai_etal_output/binary_40fold_decrease/mark_names_top80.txt 80

Work flow:
|__ Get correlations:
|____ based on emssion data
|____ based on binary data
|__ Greedy selection facity location SSA
|__ Get mark combinations presentation for ChromHH
|__ Run eval subset with increasing number of marks as information
|__ Get to mark names
